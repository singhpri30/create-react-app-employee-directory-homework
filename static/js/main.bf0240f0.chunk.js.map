{"version":3,"sources":["component/TableData.js","component/SearchUser.js","component/Table.js","component/Header.js","App.js","index.js"],"names":["UserList","props","Table","striped","bordered","hover","variant","className","onClick","sortBy","orderBy","icon","faAngleDown","userResults","map","user","key","login","uuid","src","picture","medium","alt","name","first","last","gender","email","phone","location","city","state","SearchUser","htmlFor","onChange","handleInputChange","value","search","type","placeholder","id","TableEle","error","isLoaded","users","originalUsers","asc","event","preventDefault","target","console","log","setState","filteredResults","filter","toLowerCase","includes","category","sortedUserList","sort","a","b","localeCompare","fetch","then","res","json","response","results","this","React","Component","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf0240f0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Table from 'react-bootstrap/Table';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction UserList(props) {\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\" className=\"mt-2\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Picture</th>\r\n                    <th onClick={()=>props.sortBy(\"firstName\",props.orderBy)}>First Name<FontAwesomeIcon icon={faAngleDown} /></th>\r\n                    <th onClick={()=>props.sortBy(\"lastName\",props.orderBy)}>Last Name<FontAwesomeIcon icon={faAngleDown} /></th>\r\n                    <th>Gender</th>\r\n                    <th>Email</th>\r\n                    <th>Contact Number</th>\r\n                    <th onClick={()=>props.sortBy(\"city\",props.orderBy)}>City<FontAwesomeIcon icon={faAngleDown} /></th>\r\n                    <th onClick={()=>props.sortBy(\"state\",props.orderBy)}>State<FontAwesomeIcon icon={faAngleDown} /></th>\r\n\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {/* looping over user array    */}\r\n                {props.userResults.map(user => {\r\n\r\n                    return (\r\n                        <tr key={user.login.uuid}>\r\n                            <td><img src={user.picture.medium} alt=\"user\"></img></td>\r\n                            <td>{user.name.first}</td>\r\n                            <td>{user.name.last}</td>\r\n                            <td>{user.gender}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.phone}</td>\r\n                            <td>{user.location.city}</td>\r\n                            <td>{user.location.state}</td>\r\n                        </tr>\r\n                    )\r\n                }\r\n                )}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction SearchUser(props) {\r\n  return (\r\n    <form className=\"text-center\">\r\n      <div className=\"form-group m-auto\">\r\n        <label className=\"mr-2\" htmlFor=\"search\"><strong>Search:</strong></label>\r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.search}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"d-inline\"\r\n          placeholder=\"Search for a Gif\"\r\n          id=\"search\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchUser;\r\n\r\n\r\n","import React from 'react'\r\nimport UserList from \"./TableData\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// import Button from 'react-bootstrap/Button';\r\n// import NavBar from \"./NavigationBar\";\r\nimport SearchUser from \"./SearchUser\";\r\n\r\nexport default class TableEle extends React.Component {\r\n\r\n    state = {\r\n        search: \"\",\r\n        error: null,\r\n        isLoaded: false,\r\n        users: [],\r\n        originalUsers: [],\r\n        orderBy: {\r\n            first: {\r\n                asc: true\r\n            },\r\n            last: {\r\n                asc: true\r\n            },\r\n            state: {\r\n                asc: true\r\n            },\r\n            city: {\r\n                asc: true\r\n            },\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://randomuser.me/api/?results=20\") //getting 20 random users from this API\r\n            .then(res => res.json())\r\n            .then(\r\n                (response) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        users: response.results,//storing results array in items\r\n                        originalUsers: response.results\r\n                    });\r\n                    console.log(this.state.users);\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n    handleInputChange = event => {\r\n        event.preventDefault();\r\n        let users = this.state.users\r\n        // debugger;\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        console.log(value);\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        if (value !== \"\") {\r\n            const filteredResults = users.filter(user =>\r\n\r\n                // user.name.first.toLowerCase().indexOf(value.toLowerCase()) !== -1 ? true : false);\r\n                // user.name.first.toLowerCase().includes(value.toLowerCase()))\r\n                user.name.first.toLowerCase().includes(value.toLowerCase()) || user.name.last.toLowerCase().includes(value.toLowerCase()) || user.location.city.toLowerCase().includes(value.toLowerCase()) || user.location.state.toLowerCase().includes(value.toLowerCase()));\r\n            //try search by last name,city and state\r\n            // console.log(user);\r\n            // console.log(searchTerm)\r\n            this.setState({\r\n                users: filteredResults\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                users: this.state.originalUsers\r\n            })\r\n            // alert(\"Please enter search value\");\r\n            // window.location.reload(false); //refresh the userList when user deletes text value\r\n        }\r\n    };\r\n\r\n\r\n\r\n    sortBy = (category, orderBy) => {\r\n        let sortedUserList = [];\r\n\r\n        switch (category) {\r\n            case \"firstName\":\r\n                if (orderBy.first.asc) {\r\n                    sortedUserList = this.state.users.sort((a, b) => a.name.first.localeCompare(b.name.first));\r\n                    this.setState({\r\n                        orderBy: {\r\n                            first: {\r\n                                asc: false\r\n                            },\r\n                            last: {\r\n                                asc: true\r\n                            },\r\n                            state: {\r\n                                asc: true\r\n                            },\r\n                            city: {\r\n                                asc: true\r\n                            },\r\n                        }\r\n                    })\r\n\r\n                }\r\n                else {\r\n\r\n                    sortedUserList = this.state.users.sort((a, b) => b.name.first.localeCompare(a.name.first));\r\n                    this.setState({\r\n                        orderBy: {\r\n                            first: {\r\n                                asc: true\r\n                            },\r\n                            last: {\r\n                                asc: true\r\n                            },\r\n                            state: {\r\n                                asc: true\r\n                            },\r\n                            city: {\r\n                                asc: true\r\n                            },\r\n                        }\r\n                    })\r\n\r\n                }\r\n                break;\r\n            case \"lastName\":\r\n                if (orderBy.last.asc) {\r\n                    sortedUserList = this.state.users.sort((a, b) => a.name.last.localeCompare(b.name.last));\r\n                    this.setState({\r\n                        orderBy: {\r\n                            last: {\r\n                                asc: false\r\n                            },\r\n                            first: {\r\n                                asc: true\r\n                            },\r\n                            state: {\r\n                                asc: true\r\n                            },\r\n                            city: {\r\n                                asc: true\r\n                            },\r\n                        }\r\n                    })\r\n\r\n                }\r\n                else {\r\n\r\n                    sortedUserList = this.state.users.sort((a, b) => b.name.last.localeCompare(a.name.last));\r\n                    this.setState({\r\n                        orderBy: {\r\n                            last: {\r\n                                asc: true\r\n                            },\r\n                            first: {\r\n                                asc: true\r\n                            },\r\n                            state: {\r\n                                asc: true\r\n                            },\r\n                            city: {\r\n                                asc: true\r\n                            },\r\n                        }\r\n                    })\r\n\r\n                }\r\n\r\n                break;\r\n            case \"city\":\r\n                if (orderBy.city.asc) {\r\n                    sortedUserList = this.state.users.sort((a, b) => a.location.city.localeCompare(b.location.city));\r\n                    this.setState({\r\n                        orderBy: {\r\n                            city: {\r\n                                asc: false\r\n                            },\r\n                            first: {\r\n                                asc: true\r\n                            },\r\n                            state: {\r\n                                asc: true\r\n                            },\r\n                            last: {\r\n                                asc: true\r\n                            },\r\n                        }\r\n                    })\r\n\r\n                }\r\n                else {\r\n\r\n                    sortedUserList = this.state.users.sort((a, b) => b.location.city.localeCompare(a.location.city));\r\n                    this.setState({\r\n                        orderBy: {\r\n                            city: {\r\n                                asc: true\r\n                            },\r\n                            first: {\r\n                                asc: true\r\n                            },\r\n                            state: {\r\n                                asc: true\r\n                            },\r\n                            last: {\r\n                                asc: true\r\n                            },\r\n                        }\r\n                    })\r\n\r\n                }\r\n                break;\r\n            case \"state\":\r\n                if (orderBy.state.asc) {\r\n                    sortedUserList = this.state.users.sort((a, b) => a.location.state.localeCompare(b.location.state));\r\n                    this.setState({\r\n                        orderBy: {\r\n                            state: {\r\n                                asc: false\r\n                            },\r\n                            first: {\r\n                                asc: true\r\n                            },\r\n                            city: {\r\n                                asc: true\r\n                            },\r\n                            last: {\r\n                                asc: true\r\n                            },\r\n                        }\r\n                    })\r\n\r\n                }\r\n                else {\r\n\r\n                    sortedUserList = this.state.users.sort((a, b) => b.location.state.localeCompare(a.location.state));\r\n                    this.setState({\r\n                        orderBy: {\r\n                            state: {\r\n                                asc: true\r\n                            },\r\n                            first: {\r\n                                asc: true\r\n                            },\r\n                            city: {\r\n                                asc: true\r\n                            },\r\n                            last: {\r\n                                asc: true\r\n                            },\r\n                        }\r\n                    })\r\n\r\n                }\r\n                break;\r\n            default:\r\n                sortedUserList = this.state.users.sort((a, b) => a.name.first.localeCompare(b.name.first));\r\n        }\r\n\r\n        this.setState({\r\n            users: sortedUserList\r\n        })\r\n    }\r\n    // sortByLast = (event) => {\r\n    //     event.preventDefault();\r\n    //     let sortedUserList = this.state.users.sort((a, b) => a.name.last.localeCompare(b.name.last));\r\n    //     this.setState({\r\n    //         users: sortedUserList\r\n    //     })\r\n    // }\r\n    // sortByCity = (event) => {\r\n    //     event.preventDefault();\r\n    //     let sortedUserList = this.state.users.sort((a, b) => a.location.city.localeCompare(b.location.city));\r\n    //     this.setState({\r\n    //         users: sortedUserList\r\n    //     })\r\n    // }\r\n\r\n    // sortByState = (event) => {\r\n    //     event.preventDefault();\r\n    //     let sortedUserList = this.state.users.sort((a, b) => a.location.state.localeCompare(b.location.state));\r\n    //     this.setState({\r\n    //         users: sortedUserList\r\n    //     })\r\n    // }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <SearchUser\r\n                    search={this.state.search}\r\n                    handleInputChange={this.handleInputChange}\r\n                />\r\n                <UserList userResults={this.state.users}\r\n                    sortBy={this.sortBy}\r\n                    orderBy={this.state.orderBy}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nexport default function Header() {\r\n  return (\r\n    \r\n     <header className=\"h-50\">\r\n       <h2 className=\"text-center bg-info mt-2\">Employee Directory</h2>\r\n     </header>\r\n    \r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Table from './component/Table';\nimport Header from './component/Header';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header></Header>\n      <Table></Table>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}